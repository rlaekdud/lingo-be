plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'kr.co.ipalab'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'
    // H2
    runtimeOnly 'com.h2database:h2'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    implementation 'com.querydsl:querydsl-core'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    // mongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
}

tasks.named('test') {
    useJUnitPlatform()
}
